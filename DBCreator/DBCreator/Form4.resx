<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8XRQvxQBO+h+UfVJW/XCiIvf37y6PlU/Fs1h0FnS+VH1MbW/C6Otf1MPO+2ZUfXJe2J5h7R8ORAXP5Ho
        T6LqOp3YH0RzGXSWlDfY+WBUfVyd2N0iYMfdO/pYVH0SPzHi/zvoG6FPRk+ODsOgs7SrRS+Pqo+tv4xu
        EgGnkVtFD44eE31DdMWIg+X1uWP02Ojp0QOiU8Ggc1zOjPIn8R+J8rX8W789LsChGHQAWAGDDgArYNAB
        YAUMOgCsgEEHgBVwn30AWAH32QeAlXCffQBYAffZB4CVcJ99AFiJ0X328xa9AMBpJO8bf63o2tGVo8+L
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA6DrjjP8FTrP9rL0WetkAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>152, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>253, 17</value>
  </metadata>
</root>